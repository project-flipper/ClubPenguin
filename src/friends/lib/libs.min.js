(function(jQuery) {/*
  jquery.string - Prototype string functions for jQuery (c) 2008 David E. Still (http://stilldesigning.com) Original Prototype extensions (c) 2005-2008 Sam Stephenson (http://prototypejs.org)
  */
  jQuery.extend({ __stringPrototype: { JSONFilter: /^\/\*-secure-([\s\S]*)\*\/\s*$/, ScriptFragment: '<script[^>]*>([\\S\\s]*?)<\/script>', specialChar: { '\b': '\\b', '\t': '\\t', '\n': '\\n', '\f': '\\f', '\r': '\\r', '\\': '\\\\' }, blank: function (s) { return (/^\s*$/).test(this.s(s) || ' '); }, camelize: function (s) { var a = this.s(s).split('-'), i; s = [a[0]]; for (i = 1; i < a.length; i++) { s.push(a[i].charAt(0).toUpperCase() + a[i].substring(1)); } s = s.join(''); return this.r(arguments, 0, s); }, capitalize: function (s) { s = this.s(s); s = s.charAt(0).toUpperCase() + s.substring(1).toLowerCase(); return this.r(arguments, 0, s); }, dasherize: function (s) { s = this.s(s).split('_').join('-'); return this.r(arguments, 0, s); }, empty: function (s) { return this.s(s) === ''; }, endsWith: function (pattern, s) { s = this.s(s); var d = s.length - pattern.length; return d >= 0 && s.lastIndexOf(pattern) === d; }, escapeHTML: function (s) { s = this.s(s).replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;'); return this.r(arguments, 0, s); }, extractScripts: function (s) { var matchAll = new RegExp(this.ScriptFragment, 'img'), matchOne = new RegExp(this.ScriptFragment, 'im'), scriptMatches = this.s(s).match(matchAll) || [], scriptTags = [], i; if (scriptMatches.length > 0) { for (i = 0; i < scriptMatches.length; i++) { scriptTags.push(scriptMatches[i].match(matchOne)[1] || ''); } } return scriptTags; }, gsub: function (pattern, replacement, s) { s = this.s(s); if (jQuery.isFunction(replacement)) { s = this.sub(pattern, replacement, -1, s); } else { s = s.split(pattern).join(replacement); } return this.r(arguments, 2, s); }, include: function (pattern, s) { return this.s(s).indexOf(pattern) > -1; }, inspect: function (useDoubleQuotes, s) { s = this.s(s); var escapedString; try { escapedString = this.sub(/[\x00-\x1f\\]/, function (match) { var character = jQuery.__stringPrototype.specialChar[match[0]]; return character ? character : '\\u00' + match[0].charCodeAt().toPaddedString(2, 16); }, -1, s); } catch (e) { escapedString = s; } s = (useDoubleQuotes) ? '"' + escapedString.replace(/"/g, '\\"') + '"' : "'" + escapedString.replace(/'/g, '\\\'') + "'"; return this.r(arguments, 1, s); }, interpolate: function (obj, pattern, s) { s = this.s(s); if (!pattern) { pattern = /(\#\{\s*(\w+)\s*\})/; } var gpattern = new RegExp(pattern.source, "g"); var matches = s.match(gpattern), i; for (i = 0; i < matches.length; i++) { s = s.replace(matches[i], obj[matches[i].match(pattern)[2]]); } return this.r(arguments, 2, s); }, isJSON: function (s) { s = this.s(s); if (this.blank(s)) { return false; } s = s.replace(/\\./g, '@').replace(/"[^"\\\n\r]*"/g, ''); return (/^[,:{}\[\]0-9.\-+Eaeflnr-u \n\r\t]*$/).test(s); }, scan: function (pattern, replacement, s) { s = this.s(s); this.sub(pattern, replacement, -1, s); return this.r(arguments, 2, s); }, startsWith: function (pattern, s) { return this.s(s).indexOf(pattern) === 0; }, strip: function (s) { s = jQuery.trim(this.s(s)); return this.r(arguments, 0, s); }, stripScripts: function (s) { s = this.s(s).replace(new RegExp(this.ScriptFragment, 'img'), ''); return this.r(arguments, 0, s); }, stripTags: function (s) { s = this.s(s).replace(/<\/?[^>]+>/gi, ''); return this.r(arguments, 0, s); }, sub: function (pattern, replacement, count, s) { s = this.s(s); if (pattern.source && !pattern.global) { var patternMods = (pattern.ignoreCase) ? "ig" : "g"; patternMods += (pattern.multiline) ? "m" : ""; pattern = new RegExp(pattern.source, patternMods); } var sarray = s.split(pattern), matches = s.match(pattern), i; if (jQuery.browser.msie) { if (s.indexOf(matches[0]) === 0) { sarray.unshift(""); } if (s.lastIndexOf(matches[matches.length - 1]) === s.length - matches[matches.length - 1].length) { sarray.push(""); } } count = (count < 0) ? (sarray.length - 1) : count || 1; s = sarray[0]; for (i = 1; i < sarray.length; i++) { if (i <= count) { if (jQuery.isFunction(replacement)) { s += replacement(matches[i - 1] || matches) + sarray[i]; } else { s += replacement + sarray[i]; } } else { s += (matches[i - 1] || matches) + sarray[i]; } } return this.r(arguments, 3, s); }, succ: function (s) { s = this.s(s); s = s.slice(0, s.length - 1) + String.fromCharCode(s.charCodeAt(s.length - 1) + 1); return this.r(arguments, 0, s); }, times: function (count, s) { s = this.s(s); var newS = "", i; for (i = 0; i < count; i++) { newS += s; } return this.r(arguments, 1, newS); }, toJSON: function (s) { return this.r(arguments, 0, this.inspect(true, this.s(s))); }, toQueryParams: function (separator, s) { s = this.s(s); var paramsList = s.substring(s.indexOf('?') + 1).split('#')[0].split(separator || '&'), params = {}, i, key, value, pair; for (i = 0; i < paramsList.length; i++) { pair = paramsList[i].split('='); key = decodeURIComponent(pair[0]); value = (pair[1]) ? decodeURIComponent(pair[1]) : undefined; if (params[key]) { if (typeof params[key] === "string") { params[key] = [params[key]]; } params[key].push(value); } else { params[key] = value; } } return params; }, truncate: function (length, truncation, s) { s = this.s(s); length = length || 30; truncation = (!truncation) ? '...' : truncation; s = (s.length > length) ? s.slice(0, length - truncation.length) + truncation : String(s); return this.r(arguments, 2, s); }, underscore: function (s) { s = this.sub(/[A-Z]/, function (c) { return "_" + c.toLowerCase(); }, -1, this.s(s)); if (s.charAt(0) === "_") { s = s.substring(1); } return this.r(arguments, 0, s); }, unescapeHTML: function (s) { s = this.stripTags(this.s(s)).replace(/&amp;/g, '&').replace(/&lt;/g, '<').replace(/&gt;/g, '>'); return this.r(arguments, 0, s); }, unfilterJSON: function (filter, s) { s = this.s(s); filter = filter || this.JSONFilter; var filtered = s.match(filter); s = (filtered !== null) ? filtered[1] : s; return this.r(arguments, 1, jQuery.trim(s)); }, r: function (args, size, s) { if (args.length > size || this.str === undefined) { return s; } else { this.str = s.toString(); return this; } }, s: function (s) { if (s === '' || s) { return s; } if (this.str === '' || this.str) { return this.str; } return this; } }, string: function (str) { if (str === String.prototype) { jQuery.extend(String.prototype, jQuery.__stringPrototype); } else { return jQuery.extend({ str: str }, jQuery.__stringPrototype); } } }); jQuery.__stringPrototype.parseQuery = jQuery.__stringPrototype.toQueryParams;

  /*
    ! Copyright (c) 2011 Brandon Aaron (http://brandonaaron.net)
    Licensed under the MIT License (LICENSE.txt).
  
    Thanks to: http://adomas.org/javascript-mouse-wheel/ for some pointers.
    Thanks to: Mathias Bank(http://www.mathias-bank.de) for a scope bug fix.
    Thanks to: Seamus Leahy for adding deltaX and deltaY
  
    Version: 3.0.6
    
    Requires: 1.2.2+
  */
  (function ($) { var types = ['DOMMouseScroll', 'mousewheel']; if ($.event.fixHooks) { for (var i = types.length; i;) { $.event.fixHooks[types[--i]] = $.event.mouseHooks; } } $.event.special.mousewheel = { setup: function () { if (this.addEventListener) { for (var i = types.length; i;) { this.addEventListener(types[--i], handler, false); } } else { this.onmousewheel = handler; } }, teardown: function () { if (this.removeEventListener) { for (var i = types.length; i;) { this.removeEventListener(types[--i], handler, false); } } else { this.onmousewheel = null; } } }; $.fn.extend({ mousewheel: function (fn) { return fn ? this.bind("mousewheel", fn) : this.trigger("mousewheel"); }, unmousewheel: function (fn) { return this.unbind("mousewheel", fn); } }); function handler(event) { var orgEvent = event || window.event, args = [].slice.call(arguments, 1), delta = 0, returnValue = true, deltaX = 0, deltaY = 0; event = $.event.fix(orgEvent); event.type = "mousewheel"; if (orgEvent.wheelDelta) { delta = orgEvent.wheelDelta / 120; } if (orgEvent.detail) { delta = -orgEvent.detail / 3; } deltaY = delta; if (orgEvent.axis !== undefined && orgEvent.axis === orgEvent.HORIZONTAL_AXIS) { deltaY = 0; deltaX = -1 * delta; } if (orgEvent.wheelDeltaY !== undefined) { deltaY = orgEvent.wheelDeltaY / 120; } if (orgEvent.wheelDeltaX !== undefined) { deltaX = -1 * orgEvent.wheelDeltaX / 120; } args.unshift(event, delta, deltaX, deltaY); return ($.event.dispatch || $.event.handle).apply(this, args); } })(jQuery);

  /*
  http://www.JSON.org/json2.js
  2011-02-23
  Public Domain.
  NO WARRANTY EXPRESSED OR IMPLIED. USE AT YOUR OWN RISK.
  See http://www.JSON.org/js.html
  */
  var JSON; if (!JSON) { JSON = {}; } (function () { "use strict"; function f(n) { return n < 10 ? '0' + n : n; } if (typeof Date.prototype.toJSON !== 'function') { Date.prototype.toJSON = function (key) { return isFinite(this.valueOf()) ? this.getUTCFullYear() + '-' + f(this.getUTCMonth() + 1) + '-' + f(this.getUTCDate()) + 'T' + f(this.getUTCHours()) + ':' + f(this.getUTCMinutes()) + ':' + f(this.getUTCSeconds()) + 'Z' : null; }; String.prototype.toJSON = Number.prototype.toJSON = Boolean.prototype.toJSON = function (key) { return this.valueOf(); }; } var cx = /[\u0000\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g, escapable = /[\\\"\x00-\x1f\x7f-\x9f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g, gap, indent, meta = { '\b': '\\b', '\t': '\\t', '\n': '\\n', '\f': '\\f', '\r': '\\r', '"': '\\"', '\\': '\\\\' }, rep; function quote(string) { escapable.lastIndex = 0; return escapable.test(string) ? '"' + string.replace(escapable, function (a) { var c = meta[a]; return typeof c === 'string' ? c : '\\u' + ('0000' + a.charCodeAt(0).toString(16)).slice(-4); }) + '"' : '"' + string + '"'; } function str(key, holder) { var i, k, v, length, mind = gap, partial, value = holder[key]; if (value && typeof value === 'object' && typeof value.toJSON === 'function') { value = value.toJSON(key); } if (typeof rep === 'function') { value = rep.call(holder, key, value); } switch (typeof value) { case 'string': return quote(value); case 'number': return isFinite(value) ? String(value) : 'null'; case 'boolean': case 'null': return String(value); case 'object': if (!value) { return 'null'; } gap += indent; partial = []; if (Object.prototype.toString.apply(value) === '[object Array]') { length = value.length; for (i = 0; i < length; i += 1) { partial[i] = str(i, value) || 'null'; } v = partial.length === 0 ? '[]' : gap ? '[\n' + gap + partial.join(',\n' + gap) + '\n' + mind + ']' : '[' + partial.join(',') + ']'; gap = mind; return v; } if (rep && typeof rep === 'object') { length = rep.length; for (i = 0; i < length; i += 1) { if (typeof rep[i] === 'string') { k = rep[i]; v = str(k, value); if (v) { partial.push(quote(k) + (gap ? ': ' : ':') + v); } } } } else { for (k in value) { if (Object.prototype.hasOwnProperty.call(value, k)) { v = str(k, value); if (v) { partial.push(quote(k) + (gap ? ': ' : ':') + v); } } } } v = partial.length === 0 ? '{}' : gap ? '{\n' + gap + partial.join(',\n' + gap) + '\n' + mind + '}' : '{' + partial.join(',') + '}'; gap = mind; return v; } } if (typeof JSON.stringify !== 'function') { JSON.stringify = function (value, replacer, space) { var i; gap = ''; indent = ''; if (typeof space === 'number') { for (i = 0; i < space; i += 1) { indent += ' '; } } else if (typeof space === 'string') { indent = space; } rep = replacer; if (replacer && typeof replacer !== 'function' && (typeof replacer !== 'object' || typeof replacer.length !== 'number')) { throw new Error('JSON.stringify'); } return str('', { '': value }); }; } if (typeof JSON.parse !== 'function') { JSON.parse = function (text, reviver) { var j; function walk(holder, key) { var k, v, value = holder[key]; if (value && typeof value === 'object') { for (k in value) { if (Object.prototype.hasOwnProperty.call(value, k)) { v = walk(value, k); if (v !== undefined) { value[k] = v; } else { delete value[k]; } } } } return reviver.call(holder, key, value); } text = String(text); cx.lastIndex = 0; if (cx.test(text)) { text = text.replace(cx, function (a) { return '\\u' + ('0000' + a.charCodeAt(0).toString(16)).slice(-4); }); } if (/^[\],:{}\s]*$/.test(text.replace(/\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g, '@').replace(/"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g, ']').replace(/(?:^|:|,)(?:\s*\[)+/g, ''))) { j = eval('(' + text + ')'); return typeof reviver === 'function' ? walk({ '': j }, '') : j; } throw new SyntaxError('JSON.parse'); }; } }());

/**
 * jQuery-Plugin "preloadCssImages"
 * by Scott Jehl, scott@filamentgroup.com
 * http://www.filamentgroup.com
 * reference article: http://www.filamentgroup.com/lab/update_automatically_preload_images_from_css_with_jquery/
 * demo page: http://www.filamentgroup.com/examples/preloadImages/index_v2.php
 * 
 * Copyright (c) 2008 Filament Group, Inc
 * Dual licensed under the MIT (filamentgroup.com/examples/mit-license.txt) and GPL (filamentgroup.com/examples/gpl-license.txt) licenses.
 *
 * Version: 5.0, 10.31.2008
 * Changelog:
 * 	02.20.2008 initial Version 1.0
 *    06.04.2008 Version 2.0 : removed need for any passed arguments. Images load from any and all directories.
 *    06.21.2008 Version 3.0 : Added options for loading status. Fixed IE abs image path bug (thanks Sam Pohlenz).
 *    07.24.2008 Version 4.0 : Added support for @imported CSS (credit: http://marcarea.com/). Fixed support in Opera as well. 
 *    10.31.2008 Version: 5.0 : Many feature and performance enhancements from trixta
 * --------------------------------------------------------------------
 */

;jQuery.preloadCssImages = function(settings){
	settings = jQuery.extend({
		statusTextEl: null,
		statusBarEl: null,
		errorDelay: 999, // handles 404-Errors in IE
		simultaneousCacheLoading: 2
	}, settings);
	var allImgs = [],
		loaded = 0,
		imgUrls = [],
		thisSheetRules,	
		errorTimer;
	
	function onImgComplete(){
		clearTimeout(errorTimer);
		if (imgUrls && imgUrls.length && imgUrls[loaded]) {
			loaded++;
			if (settings.statusTextEl) {
				var nowloading = (imgUrls[loaded]) ? 
					'Now Loading: <span>' + imgUrls[loaded].split('/')[imgUrls[loaded].split('/').length - 1] : 
					'Loading complete'; // wrong status-text bug fixed
				jQuery(settings.statusTextEl).html('<span class="numLoaded">' + loaded + '</span> of <span class="numTotal">' + imgUrls.length + '</span> loaded (<span class="percentLoaded">' + (loaded / imgUrls.length * 100).toFixed(0) + '%</span>) <span class="currentImg">' + nowloading + '</span></span>');
			}
			if (settings.statusBarEl) {
				var barWidth = jQuery(settings.statusBarEl).width();
				jQuery(settings.statusBarEl).css('background-position', -(barWidth - (barWidth * loaded / imgUrls.length).toFixed(0)) + 'px 50%');
			}
			loadImgs();
		}
	}
	
	function loadImgs(){
		//only load 1 image at the same time / most browsers can only handle 2 http requests, 1 should remain for user-interaction (Ajax, other images, normal page requests...)
		// otherwise set simultaneousCacheLoading to a higher number for simultaneous downloads
		if(imgUrls && imgUrls.length && imgUrls[loaded]){
			var img = new Image(); //new img obj
			img.src = imgUrls[loaded];	//set src either absolute or rel to css dir
			if(!img.complete){
				jQuery(img).bind('error load onreadystatechange', onImgComplete);
			} else {
				onImgComplete();
			}
			errorTimer = setTimeout(onImgComplete, settings.errorDelay); // handles 404-Errors in IE
		}
	}
	
	function parseCSS(sheets, urls) {
		var w3cImport = false,
			imported = [],
			importedSrc = [],
			baseURL;
		var sheetIndex = sheets.length;
		while(sheetIndex--){//loop through each stylesheet
			
			var cssPile = '';//create large string of all css rules in sheet
			
			if(urls && urls[sheetIndex]){
				baseURL = urls[sheetIndex];
			} else {
				var csshref = (sheets[sheetIndex].href) ? sheets[sheetIndex].href : 'window.location.href';
				var baseURLarr = csshref.split('/');//split href at / to make array
				baseURLarr.pop();//remove file path from baseURL array
				baseURL = baseURLarr.join('/');//create base url for the images in this sheet (css file's dir)
				if (baseURL) {
					baseURL += '/'; //tack on a / if needed
				}
			}
			if(sheets[sheetIndex].cssRules || sheets[sheetIndex].rules){
				thisSheetRules = (sheets[sheetIndex].cssRules) ? //->>> http://www.quirksmode.org/dom/w3c_css.html
					sheets[sheetIndex].cssRules : //w3
					sheets[sheetIndex].rules; //ie 
				var ruleIndex = thisSheetRules.length;
				while(ruleIndex--){
					if(thisSheetRules[ruleIndex].style && thisSheetRules[ruleIndex].style.cssText){
						var text = thisSheetRules[ruleIndex].style.cssText;
						if(text.toLowerCase().indexOf('url') != -1){ // only add rules to the string if you can assume, to find an image, speed improvement
							cssPile += text; // thisSheetRules[ruleIndex].style.cssText instead of thisSheetRules[ruleIndex].cssText is a huge speed improvement
						}
					} else if(thisSheetRules[ruleIndex].styleSheet) {
						imported.push(thisSheetRules[ruleIndex].styleSheet);
						w3cImport = true;
					}
					
				}
			}
			//parse cssPile for image urls
			var tmpImage = cssPile.match(/[^\("]+\.(gif|jpg|jpeg|png)/g);//reg ex to get a string of between a "(" and a ".filename" / '"' for opera-bugfix
			if(tmpImage){
				var i = tmpImage.length;
				while(i--){ // handle baseUrl here for multiple stylesheets in different folders bug
					var imgSrc = (tmpImage[i].charAt(0) == '/' || tmpImage[i].match('://')) ? // protocol-bug fixed
						tmpImage[i] : 
						baseURL + tmpImage[i];
					
					if(jQuery.inArray(imgSrc, imgUrls) == -1){
						imgUrls.push(imgSrc);
					}
				}
			}
			
			if(!w3cImport && sheets[sheetIndex].imports && sheets[sheetIndex].imports.length) {
				for(var iImport = 0, importLen = sheets[sheetIndex].imports.length; iImport < importLen; iImport++){
					var iHref = sheets[sheetIndex].imports[iImport].href;
					iHref = iHref.split('/');
					iHref.pop();
					iHref = iHref.join('/');
					if (iHref) {
						iHref += '/'; //tack on a / if needed
					}
					var iSrc = (iHref.charAt(0) == '/' || iHref.match('://')) ? // protocol-bug fixed
						iHref : 
						baseURL + iHref;
					
					importedSrc.push(iSrc);
					imported.push(sheets[sheetIndex].imports[iImport]);
				}
				
				
			}
		}//loop
		if(imported.length){
			parseCSS(imported, importedSrc);
			return false;
		}
		var downloads = settings.simultaneousCacheLoading;
		while( downloads--){
			setTimeout(loadImgs, downloads);
		}
	}
	parseCSS(document.styleSheets);
	return imgUrls;
};}(require('jquery')));
